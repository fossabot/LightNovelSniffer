//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace LightNovelSniffer.Resources {
    using System;
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "4.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    public class LightNovelSniffer_Strings {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal LightNovelSniffer_Strings() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        public static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("LightNovelSniffer.Resources.LightNovelSniffer_Strings", typeof(LightNovelSniffer_Strings).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        public static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Unable to download cover at {0}..
        /// </summary>
        public static string CoverDownloadExceptionMessage {
            get {
                return ResourceManager.GetString("CoverDownloadExceptionMessage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Cannot set the specified CultureInfo : {0}..
        /// </summary>
        public static string CultureInfoExceptionMessage {
            get {
                return ResourceManager.GetString("CultureInfoExceptionMessage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Specified CultureInfo is null..
        /// </summary>
        public static string CultureInfoNullExceptionMessage {
            get {
                return ResourceManager.GetString("CultureInfoNullExceptionMessage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Specified language is empty and cannot be used..
        /// </summary>
        public static string EmptyLanguageExceptionMessage {
            get {
                return ResourceManager.GetString("EmptyLanguageExceptionMessage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Cannot find assembly {0}..
        /// </summary>
        public static string FindAssemblyExceptionMessage {
            get {
                return ResourceManager.GetString("FindAssemblyExceptionMessage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Cannot instantiate CultrureInfo from language &quot;{0}&quot;..
        /// </summary>
        public static string GetCultureFromLanguageExceptionMessage {
            get {
                return ResourceManager.GetString("GetCultureFromLanguageExceptionMessage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Cannot instantiate {0} as a IParser..
        /// </summary>
        public static string InstantiateAssemblyExceptionMessage {
            get {
                return ResourceManager.GetString("InstantiateAssemblyExceptionMessage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Cannot load assembly {0}..
        /// </summary>
        public static string LoadAssemblyExceptionMessage {
            get {
                return ResourceManager.GetString("LoadAssemblyExceptionMessage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Start of {0} {1}..
        /// </summary>
        public static string LogBeginLnLanguage {
            get {
                return ResourceManager.GetString("LogBeginLnLanguage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Chapter {0} doesn&apos;t seem to exist. Do you want to check for the following one ?.
        /// </summary>
        public static string LogChapterDoesntExist_AskForNext {
            get {
                return ResourceManager.GetString("LogChapterDoesntExist_AskForNext", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The parser failed to process chapter {0}. Do you want to try the following one ?.
        /// </summary>
        public static string LogChapterParserException_AskForNext {
            get {
                return ResourceManager.GetString("LogChapterParserException_AskForNext", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to EPUB creation file ended..
        /// </summary>
        public static string LogClosingEpubFile {
            get {
                return ResourceManager.GetString("LogClosingEpubFile", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Closing PDF file..
        /// </summary>
        public static string LogClosingPdfFile {
            get {
                return ResourceManager.GetString("LogClosingPdfFile", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to End of {0} {1}..
        /// </summary>
        public static string LogEndLnLanguage {
            get {
                return ResourceManager.GetString("LogEndLnLanguage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Error while processing URL {0} by the {1}..
        /// </summary>
        public static string LogErrorProcessingUrlByParser {
            get {
                return ResourceManager.GetString("LogErrorProcessingUrlByParser", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to No chapter retrieved from this URL..
        /// </summary>
        public static string LogNoChapterAvailableAtThisUrl {
            get {
                return ResourceManager.GetString("LogNoChapterAvailableAtThisUrl", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to No parser available for this URL..
        /// </summary>
        public static string LogNoParserAvailable {
            get {
                return ResourceManager.GetString("LogNoParserAvailable", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The chapter {0} doesn&apos;t seems to exist..
        /// </summary>
        public static string LogNotExistingChapter {
            get {
                return ResourceManager.GetString("LogNotExistingChapter", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Creating EPUB file..
        /// </summary>
        public static string LogOpeningEpubFile {
            get {
                return ResourceManager.GetString("LogOpeningEpubFile", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Opening PDF file..
        /// </summary>
        public static string LogOpeningPdfFile {
            get {
                return ResourceManager.GetString("LogOpeningPdfFile", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Retrieving {0}/{1}.
        /// </summary>
        public static string LogRetrieveChapterProgress {
            get {
                return ResourceManager.GetString("LogRetrieveChapterProgress", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The config file {0} cannot be read..
        /// </summary>
        public static string UnableToReadConfigFileExceptionMessage {
            get {
                return ResourceManager.GetString("UnableToReadConfigFileExceptionMessage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The lightNovels file {0} cannot be read..
        /// </summary>
        public static string UnableToReadLightNovelsFileExceptionMessage {
            get {
                return ResourceManager.GetString("UnableToReadLightNovelsFileExceptionMessage", resourceCulture);
            }
        }
    }
}
